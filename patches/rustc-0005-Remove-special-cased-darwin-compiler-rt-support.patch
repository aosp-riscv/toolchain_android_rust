From fbc6e55c03a6ef19178eaa850ef2b88c0023a473 Mon Sep 17 00:00:00 2001
From: Matthew Maurer <mmaurer@google.com>
Date: Mon, 30 Mar 2020 13:24:15 -0700
Subject: [PATCH] Remove special-cased darwin compiler-rt support

We ship a set of bionic headers with our clang, even on darwin. As a
result, these clang implementations of atomics are not compatible with
stdatomic.h. On a normal darwin machine, the compiler needs to provide
these. For one running our modified clang, it may not do so.

Bug: 146785396
Change-Id: I044a8afdbf65c45f850fc991f8091924ca8e043c
---
 Cargo.toml                        |  3 +++
 vendor/compiler_builtins/build.rs | 14 --------------
 2 files changed, 3 insertions(+), 14 deletions(-)

diff --git a/Cargo.toml b/Cargo.toml
index a242f090f..8cff9afc0 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -70,5 +70,8 @@ rustc-std-workspace-core = { path = 'src/tools/rustc-std-workspace-core' }
 rustc-std-workspace-alloc = { path = 'src/tools/rustc-std-workspace-alloc' }
 rustc-std-workspace-std = { path = 'src/tools/rustc-std-workspace-std' }
 
+# Patch directory source into a path source to allow modification
+compiler_builtins = { path = 'vendor/compiler_builtins/' }
+
 [patch."https://github.com/rust-lang/rust-clippy"]
 clippy_lints = { path = "src/tools/clippy/clippy_lints" }
diff --git a/vendor/compiler_builtins/build.rs b/vendor/compiler_builtins/build.rs
index b520b6247..88390d8dd 100644
--- a/vendor/compiler_builtins/build.rs
+++ b/vendor/compiler_builtins/build.rs
@@ -222,20 +222,6 @@ mod c {
             ]);
         }
 
-        if target_vendor == "apple" {
-            sources.extend(&[
-                ("atomic_flag_clear", "atomic_flag_clear.c"),
-                ("atomic_flag_clear_explicit", "atomic_flag_clear_explicit.c"),
-                ("atomic_flag_test_and_set", "atomic_flag_test_and_set.c"),
-                (
-                    "atomic_flag_test_and_set_explicit",
-                    "atomic_flag_test_and_set_explicit.c",
-                ),
-                ("atomic_signal_fence", "atomic_signal_fence.c"),
-                ("atomic_thread_fence", "atomic_thread_fence.c"),
-            ]);
-        }
-
         if target_env == "msvc" {
             if target_arch == "x86_64" {
                 sources.extend(&[
-- 
2.26.0.rc2.310.g2932bb562d-goog

